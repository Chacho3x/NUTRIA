package NutriaApp;

import NutriaModel.Ingredient;
import NutriaDao.IngredientDaoImpl;
import NutriaTableModel.IngredientTableModel;
import NutriaTableModel.NutrientConstraintReadOnlyTableModel;
import NutriaDao.NutrientDaoImpl;
import NutriaTableModel.NutrientTableModel;
import NutriaTableModel.NutrientsByIngredientTableModel;
import NutriaModel.NutrientConstraintSheet;
import NutriaDao.NutrientConstraintSheetDaoImpl;
import NutriaTableModel.NutrientConstraintSheetTableModel;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Ariel
 */
public class JFrameMain extends javax.swing.JFrame {

    /**
     * Creates new form JFrameMain
     */
    private NutrientDaoImpl nutrientDao;
    private IngredientDaoImpl ingredientDao;
    private NutrientConstraintSheetDaoImpl nutritionalSheetDao;
    
    private NutrientTableModel nutrientTableModel;
    private NutrientsByIngredientTableModel nutrientsByIngredientTableModel;
    private IngredientTableModel ingredientTableModel;
    private NutrientConstraintSheetTableModel nutritionalSheetTableModel;
    private NutrientConstraintReadOnlyTableModel constraintsByNutSheetTableModel;
    
    public JFrameMain() throws SQLException {
        initComponents();
        initNutrientFormComponents();
        initIngredientFormComponents();
        initNutritionalSheetFormComponents();
    }
    
    private void initNutrientFormComponents() {
        //Nutrients
        try {
            nutrientDao = new NutrientDaoImpl();
            nutrientTableModel = new NutrientTableModel();
            nutrientTableModel.setNutrientList(nutrientDao.queryForAll());
            jTableNutrients.setModel(nutrientTableModel);
            jTableNutrients.removeColumn(jTableNutrients.getColumn("id"));
        } catch(SQLException ex) {
            //TODO: handle
            ex.printStackTrace();
        }
    }
    
    private void initIngredientFormComponents() {
        try {
            ingredientDao = new IngredientDaoImpl();
            ingredientTableModel = new IngredientTableModel();
            ingredientTableModel.setIngredientList(ingredientDao.queryForAll());
            jTableIngredients.setModel(ingredientTableModel);
            jTableIngredients.removeColumn(jTableIngredients.getColumn("id"));
            nutrientsByIngredientTableModel = new NutrientsByIngredientTableModel();
            jTableIngredientDetails.setModel(nutrientsByIngredientTableModel);
            jTableIngredientDetails.removeColumn(jTableIngredientDetails.getColumn("id"));
            jLabelIngredientName.setVisible(false);
        } catch(SQLException ex) {
            //TODO: handle
            ex.printStackTrace();
        }
    }
    
    private void initNutritionalSheetFormComponents() {
        try {
            jTextAreaNutritionalSheetName.setText("");
            nutritionalSheetDao = new NutrientConstraintSheetDaoImpl();
            nutritionalSheetTableModel = new NutrientConstraintSheetTableModel();
            nutritionalSheetTableModel.setNutritionalSheetList(nutritionalSheetDao.queryForAll());
            jTableNutritionalSheets.setModel(nutritionalSheetTableModel);
            jTableNutritionalSheets.removeColumn(jTableNutritionalSheets.getColumn("id"));
            
            constraintsByNutSheetTableModel = new NutrientConstraintReadOnlyTableModel();
            jTableNutritionalConstraints.setModel(constraintsByNutSheetTableModel);
            jTableNutritionalConstraints.removeColumn(jTableNutritionalConstraints.getColumn("id"));
            jTableNutritionalConstraints.getColumn("Nutriente").setPreferredWidth(100);
            
        } catch(SQLException ex) {
            //TODO: handle
            ex.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneMain = new javax.swing.JTabbedPane();
        jPanelHome = new javax.swing.JPanel();
        jPanelNutrients = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableNutrients = new javax.swing.JTable();
        jButtonNewNutrient = new javax.swing.JButton();
        jButtonEditNutrient = new javax.swing.JButton();
        jButtonDeleteNutrient = new javax.swing.JButton();
        jButtonExportNutrientList = new javax.swing.JButton();
        jPanelIngredients = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableIngredients = new javax.swing.JTable();
        jPanelIngredientDetail = new javax.swing.JPanel();
        jLabelIngredientName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableIngredientDetails = new javax.swing.JTable();
        jButtonNewIngredient = new javax.swing.JButton();
        jButtonEditIngredient = new javax.swing.JButton();
        jButtonDeleteIngredient = new javax.swing.JButton();
        jPanelNutritionalSheet = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableNutritionalSheets = new javax.swing.JTable();
        jPanelNutritionalSheetDetail = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableNutritionalConstraints = new javax.swing.JTable();
        jTextAreaNutritionalSheetName = new javax.swing.JTextArea();
        jButtonNewNutritionalSheet = new javax.swing.JButton();
        jButtonEditNutritionalSheet = new javax.swing.JButton();
        jButtonDeleteNutritionalSheet = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.layout.GroupLayout jPanelHomeLayout = new org.jdesktop.layout.GroupLayout(jPanelHome);
        jPanelHome.setLayout(jPanelHomeLayout);
        jPanelHomeLayout.setHorizontalGroup(
            jPanelHomeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 580, Short.MAX_VALUE)
        );
        jPanelHomeLayout.setVerticalGroup(
            jPanelHomeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 364, Short.MAX_VALUE)
        );

        jTabbedPaneMain.addTab("<html>\n<body style=\"height: 50px;\">\nInicio\n</body>\n</html>", jPanelHome);

        jScrollPane1.setViewportView(jTableNutrients);

        jButtonNewNutrient.setText("<html>\n<body style=\"text-align: center;\">\nNuevo\n<br />\nNutriente\n</body>\n</html>");
        jButtonNewNutrient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewNutrientActionPerformed(evt);
            }
        });

        jButtonEditNutrient.setText("<html>\n<body style=\"text-align: center;\">\nEditar\n<br />\nNutriente\n</body>\n</html>");
        jButtonEditNutrient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditNutrientActionPerformed(evt);
            }
        });

        jButtonDeleteNutrient.setText("<html>\n<body style=\"text-align: center;\">\nEliminar\n<br />\nNutriente\n</body>\n</html>");
        jButtonDeleteNutrient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteNutrientActionPerformed(evt);
            }
        });

        jButtonExportNutrientList.setText("<html>\n<body style=\"text-align: center;\">\nExportar\n<br />\nLista\n</body>\n</html>");

        org.jdesktop.layout.GroupLayout jPanelNutrientsLayout = new org.jdesktop.layout.GroupLayout(jPanelNutrients);
        jPanelNutrients.setLayout(jPanelNutrientsLayout);
        jPanelNutrientsLayout.setHorizontalGroup(
            jPanelNutrientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelNutrientsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jPanelNutrientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelNutrientsLayout.createSequentialGroup()
                        .add(35, 35, 35)
                        .add(jPanelNutrientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButtonNewNutrient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanelNutrientsLayout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(jButtonEditNutrient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButtonExportNutrientList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(34, 34, 34))
                    .add(jPanelNutrientsLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButtonDeleteNutrient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(64, 64, 64))))
        );
        jPanelNutrientsLayout.setVerticalGroup(
            jPanelNutrientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelNutrientsLayout.createSequentialGroup()
                .add(jPanelNutrientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanelNutrientsLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .add(jPanelNutrientsLayout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(jPanelNutrientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanelNutrientsLayout.createSequentialGroup()
                                .add(jButtonNewNutrient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonEditNutrient, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                            .add(jButtonExportNutrientList))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButtonDeleteNutrient, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)))
                .add(60, 60, 60))
        );

        jTabbedPaneMain.addTab("Nutrientes", jPanelNutrients);

        jTableIngredients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableIngredientsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableIngredients);

        jPanelIngredientDetail.setBorder(javax.swing.BorderFactory.createTitledBorder("Información"));
        jPanelIngredientDetail.setToolTipText("");

        jLabelIngredientName.setText("jLabel1");

        jScrollPane3.setViewportView(jTableIngredientDetails);

        org.jdesktop.layout.GroupLayout jPanelIngredientDetailLayout = new org.jdesktop.layout.GroupLayout(jPanelIngredientDetail);
        jPanelIngredientDetail.setLayout(jPanelIngredientDetailLayout);
        jPanelIngredientDetailLayout.setHorizontalGroup(
            jPanelIngredientDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelIngredientDetailLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelIngredientDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelIngredientDetailLayout.createSequentialGroup()
                        .add(jLabelIngredientName)
                        .add(0, 173, Short.MAX_VALUE))
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelIngredientDetailLayout.setVerticalGroup(
            jPanelIngredientDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelIngredientDetailLayout.createSequentialGroup()
                .add(jLabelIngredientName)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonNewIngredient.setText("<html>\n<body style=\"text-align: center;\">\nNuevo\n<br />\nIngrediente\n</body>\n</html>");
        jButtonNewIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewIngredientActionPerformed(evt);
            }
        });

        jButtonEditIngredient.setText("<html>\n<body style=\"text-align: center;\">\nEditar\n<br />\nIngrediente\n</body>\n</html>");
        jButtonEditIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditIngredientActionPerformed(evt);
            }
        });

        jButtonDeleteIngredient.setText("<html>\n<body style=\"text-align: center;\">\nEliminar\n<br />\nIngrediente\n</body>\n</html>");
        jButtonDeleteIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteIngredientActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelIngredientsLayout = new org.jdesktop.layout.GroupLayout(jPanelIngredients);
        jPanelIngredients.setLayout(jPanelIngredientsLayout);
        jPanelIngredientsLayout.setHorizontalGroup(
            jPanelIngredientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelIngredientsLayout.createSequentialGroup()
                .add(jPanelIngredientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelIngredientsLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 310, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanelIngredientDetail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanelIngredientsLayout.createSequentialGroup()
                        .add(44, 44, 44)
                        .add(jButtonNewIngredient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButtonEditIngredient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButtonDeleteIngredient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelIngredientsLayout.setVerticalGroup(
            jPanelIngredientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelIngredientsLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanelIngredientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jPanelIngredientDetail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(55, 55, 55)
                .add(jPanelIngredientsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonEditIngredient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonDeleteIngredient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonNewIngredient, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Ingredientes", jPanelIngredients);

        jTableNutritionalSheets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        jTableNutritionalSheets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableNutritionalSheetsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableNutritionalSheets);

        jPanelNutritionalSheetDetail.setBorder(javax.swing.BorderFactory.createTitledBorder("Hoja Nutricional"));

        jTableNutritionalConstraints.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane5.setViewportView(jTableNutritionalConstraints);

        jTextAreaNutritionalSheetName.setEditable(false);
        jTextAreaNutritionalSheetName.setColumns(20);
        jTextAreaNutritionalSheetName.setForeground(new java.awt.Color(64, 64, 64));
        jTextAreaNutritionalSheetName.setRows(5);
        jTextAreaNutritionalSheetName.setAutoscrolls(false);
        jTextAreaNutritionalSheetName.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextAreaNutritionalSheetName.setEnabled(false);
        jTextAreaNutritionalSheetName.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPanelNutritionalSheetDetailLayout = new org.jdesktop.layout.GroupLayout(jPanelNutritionalSheetDetail);
        jPanelNutritionalSheetDetail.setLayout(jPanelNutritionalSheetDetailLayout);
        jPanelNutritionalSheetDetailLayout.setHorizontalGroup(
            jPanelNutritionalSheetDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelNutritionalSheetDetailLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jPanelNutritionalSheetDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanelNutritionalSheetDetailLayout.createSequentialGroup()
                    .addContainerGap()
                    .add(jTextAreaNutritionalSheetName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelNutritionalSheetDetailLayout.setVerticalGroup(
            jPanelNutritionalSheetDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelNutritionalSheetDetailLayout.createSequentialGroup()
                .add(56, 56, 56)
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .add(jPanelNutritionalSheetDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanelNutritionalSheetDetailLayout.createSequentialGroup()
                    .addContainerGap()
                    .add(jTextAreaNutritionalSheetName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(139, Short.MAX_VALUE)))
        );

        jButtonNewNutritionalSheet.setText("Nueva Lista Nutricional");
        jButtonNewNutritionalSheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewNutritionalSheetActionPerformed(evt);
            }
        });

        jButtonEditNutritionalSheet.setText("Modificar Lista Nutricional");
        jButtonEditNutritionalSheet.setToolTipText("");
        jButtonEditNutritionalSheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditNutritionalSheetActionPerformed(evt);
            }
        });

        jButtonDeleteNutritionalSheet.setText("Eliminar Lista Nutricional");
        jButtonDeleteNutritionalSheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteNutritionalSheetActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelNutritionalSheetLayout = new org.jdesktop.layout.GroupLayout(jPanelNutritionalSheet);
        jPanelNutritionalSheet.setLayout(jPanelNutritionalSheetLayout);
        jPanelNutritionalSheetLayout.setHorizontalGroup(
            jPanelNutritionalSheetLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelNutritionalSheetLayout.createSequentialGroup()
                .add(jPanelNutritionalSheetLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelNutritionalSheetLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 295, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanelNutritionalSheetDetail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanelNutritionalSheetLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jButtonNewNutritionalSheet)
                        .add(18, 18, 18)
                        .add(jButtonEditNutritionalSheet)
                        .add(18, 18, 18)
                        .add(jButtonDeleteNutritionalSheet)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanelNutritionalSheetLayout.setVerticalGroup(
            jPanelNutritionalSheetLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelNutritionalSheetLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelNutritionalSheetLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .add(jPanelNutritionalSheetDetail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(30, 30, 30)
                .add(jPanelNutritionalSheetLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonNewNutritionalSheet)
                    .add(jButtonEditNutritionalSheet)
                    .add(jButtonDeleteNutritionalSheet))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Listas Nutricionales", jPanelNutritionalSheet);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 580, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 364, Short.MAX_VALUE)
        );

        jTabbedPaneMain.addTab("Calculos de Mezcla", null, jPanel1, "Calculos de Mezcla");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPaneMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 585, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPaneMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 440, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPaneMain.getAccessibleContext().setAccessibleName("tab1\n");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewNutrientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewNutrientActionPerformed
        JDialog newNutrientDialog = new JDialog(this, "Nuevo Nutriente", true);
        JPanelNutrientForm nutrientForm = new JPanelNutrientForm(newNutrientDialog);
        newNutrientDialog.setContentPane(nutrientForm);
        newNutrientDialog.setSize(250, 140);
        newNutrientDialog.setResizable(false);
        newNutrientDialog.setVisible(true);
        if (nutrientForm.getSuccess()) {
            System.out.println("Successfully saved");
            try {
                nutrientTableModel.setNutrientList(nutrientDao.queryForAll());
                nutrientTableModel.fireTableDataChanged();
            } catch(SQLException ex) {
                //TODO: handle refresh table data
            }
        }
    }//GEN-LAST:event_jButtonNewNutrientActionPerformed

    private void jButtonEditNutrientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditNutrientActionPerformed
        int selectedIndex = jTableNutrients.getSelectedRow();
        Long id = (Long)jTableNutrients.getModel().getValueAt(selectedIndex, 0);
        JDialog newNutrientDialog = new JDialog(this, "Nuevo Nutriente", true);
        JPanelNutrientForm nutrientForm = new JPanelNutrientForm(newNutrientDialog, id);
        newNutrientDialog.setContentPane(nutrientForm);
        newNutrientDialog.setSize(250, 140);
        newNutrientDialog.setResizable(false);
        newNutrientDialog.setVisible(true);
        if (nutrientForm.getSuccess()) {
            System.out.println("Successfully modified");
            try {
                nutrientTableModel.setNutrientList(nutrientDao.queryForAll());
                nutrientTableModel.fireTableDataChanged();
            } catch(SQLException ex) {
                //TODO: handle table refresh
            }
        }
    }//GEN-LAST:event_jButtonEditNutrientActionPerformed

    private void jButtonDeleteNutrientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteNutrientActionPerformed
        int selectedIndex = jTableNutrients.getSelectedRow();
        Long id = (Long)jTableNutrients.getModel().getValueAt(selectedIndex, 0);
        String name = jTableNutrients.getModel().getValueAt(selectedIndex, 1).toString();
        int confirmado = JOptionPane.showConfirmDialog(
            this,
            "¿Seguro que desea eliminar el nutrient: " + name + "?",
            "Eliminar Nutriente",
            JOptionPane.YES_NO_OPTION);
        
        if (JOptionPane.YES_OPTION == confirmado) {
            try {
                nutrientDao = new NutrientDaoImpl();
                int result = nutrientDao.deleteById(id);
                if(result > 0) {
                    System.out.println("Deleted successfully");
                    nutrientTableModel.setNutrientList(nutrientDao.queryForAll());
                    nutrientTableModel.fireTableDataChanged();
                } else {
                    //TODO: validate if no success delete
                    System.out.println("Nutrient could not be deleted");
                }
            } catch(SQLException ex) {
                //TODO: handle Delete nutrient exception
                ex.printStackTrace();
            }
        } else {
            //TODO: validate in case NO opntion selected in delete Nutrient
            System.out.println("User cancel delete Nutrient");
        }
    }//GEN-LAST:event_jButtonDeleteNutrientActionPerformed

    private void jButtonNewIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewIngredientActionPerformed
        JDialog formDialog = new JDialog(this, "Nuevo Ingredient", true);
        JPanelIngredientForm ingredientForm = new JPanelIngredientForm(formDialog);
        formDialog.setContentPane(ingredientForm);
        formDialog.setSize(500, 500);
        formDialog.setResizable(false);
        formDialog.setVisible(true);
        if (ingredientForm.getSuccess()) {
            System.out.println("Successfully saved");
            try {
                ingredientTableModel.setIngredientList(ingredientDao.queryForAll());
                ingredientTableModel.fireTableDataChanged();
                nutrientsByIngredientTableModel.getNutrientList().clear();
                jLabelIngredientName.setVisible(false);
            } catch(SQLException ex) {
                //TODO: handle refresh table data
            }
        }
    }//GEN-LAST:event_jButtonNewIngredientActionPerformed

    private void jButtonEditIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditIngredientActionPerformed
        int selectedIndex = jTableIngredients.getSelectedRow();
        Long id = (Long)jTableIngredients.getModel().getValueAt(selectedIndex, 0);
        JDialog formDialog = new JDialog(this, "Modificar Ingredient", true);
        JPanelIngredientForm ingredientForm = new JPanelIngredientForm(formDialog, id);
        formDialog.setContentPane(ingredientForm);
        formDialog.setSize(500, 500);
        formDialog.setResizable(false);
        formDialog.setVisible(true);
        if (ingredientForm.getSuccess()) {
            System.out.println("Successfully saved");
            try {
                ingredientTableModel.setIngredientList(ingredientDao.queryForAll());
                ingredientTableModel.fireTableDataChanged();
                nutrientsByIngredientTableModel.getNutrientList().clear();
                jLabelIngredientName.setVisible(false);
            } catch(SQLException ex) {
                //TODO: handle refresh table data
            }
        }
    }//GEN-LAST:event_jButtonEditIngredientActionPerformed

    private void deleteIngredient() {
        int selectedIndex = jTableIngredients.getSelectedRow();
        Ingredient ingredient = (Ingredient)ingredientTableModel.getObjectAtRow(selectedIndex);
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "¿Seguro que desea eliminar el Ingredient: " + ingredient.getName() + "?",
            "Eliminar Ingrediente",
            JOptionPane.YES_NO_OPTION);
        
        if (JOptionPane.YES_OPTION == confirm) {
            try {
                int result = ingredientDao.deleteById(ingredient.getId());
                if(result > 0) {
                    System.out.println("Deleted successfully");
                    ingredientTableModel.setIngredientList(ingredientDao.queryForAll());
                    ingredientTableModel.fireTableDataChanged();
                    nutrientsByIngredientTableModel.getNutrientList().clear();
                    jLabelIngredientName.setVisible(false);
                } else {
                    //TODO: validate if no success delete
                    System.out.println("Ingredient could not be deleted");
                }
            } catch(SQLException ex) {
                //TODO: handle Delete nutrient exception
                ex.printStackTrace();
            }
        } else {
            //TODO: validate in case NO opntion selected in delete Nutrient
            System.out.println("User cancel delete Ingredient");
        }
    }
    
    private void deleteNutritionalSheet() {
        int selectedIndex = jTableNutritionalSheets.getSelectedRow();
        NutrientConstraintSheet nutritionalSheet = (NutrientConstraintSheet)nutritionalSheetTableModel.getObjectAtRow(selectedIndex);
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "¿Seguro que desea eliminar la Tabla Nutricional: " + nutritionalSheet.getName() + "?",
            "Eliminar Tabla Nutritional",
            JOptionPane.YES_NO_OPTION);
        
        if (JOptionPane.YES_OPTION == confirm) {
            try {
                int result = nutritionalSheetDao.deleteById(nutritionalSheet.getId());
                if(result > 0) {
                    System.out.println("Deleted successfully");
                    nutritionalSheetTableModel.setNutritionalSheetList(nutritionalSheetDao.queryForAll());
                    nutritionalSheetTableModel.fireTableDataChanged();
                    constraintsByNutSheetTableModel.getNutrientConstraintList().clear();
                    jTextAreaNutritionalSheetName.setText("");
                } else {
                    //TODO: validate if no success delete
                    System.out.println("Nutritional Sheet could not be deleted");
                }
            } catch(SQLException ex) {
                //TODO: handle Delete nutrient exception
                ex.printStackTrace();
            }
        } else {
            //TODO: validate in case NO opntion selected in delete Nutrient
            System.out.println("User cancel delete Nutritional Sheet");
        }
    }
    
    private void jButtonDeleteIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteIngredientActionPerformed
        deleteIngredient();
    }//GEN-LAST:event_jButtonDeleteIngredientActionPerformed

    private void jTableIngredientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableIngredientsMouseClicked
        Long ingredientId = (Long)ingredientTableModel.getValueAt(jTableIngredients.getSelectedRow(), 0);
        loadNutrientsByIngredient(ingredientId);
    }//GEN-LAST:event_jTableIngredientsMouseClicked

    private void jTableNutritionalSheetsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableNutritionalSheetsMouseClicked
        NutrientConstraintSheet nutritionalSheet = (NutrientConstraintSheet)nutritionalSheetTableModel.getObjectAtRow(jTableNutritionalSheets.getSelectedRow());
        loadConstraintsByNutritionalSheet(nutritionalSheet);
    }//GEN-LAST:event_jTableNutritionalSheetsMouseClicked

    private void jButtonNewNutritionalSheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewNutritionalSheetActionPerformed
        JDialog formDialog = new JDialog(this, "Nueva Hoja Nutricional", true);
        JPanelNutrientConstraintSheetForm nutritionalSheetForm = new JPanelNutrientConstraintSheetForm(formDialog);
        formDialog.setContentPane(nutritionalSheetForm);
        formDialog.setSize(500, 500);
        formDialog.setResizable(false);
        formDialog.setVisible(true);
        if (nutritionalSheetForm.getSuccess()) {
            System.out.println("Successfully saved");
            try {
                nutritionalSheetTableModel.setNutritionalSheetList(nutritionalSheetDao.queryForAll());
                nutritionalSheetTableModel.fireTableDataChanged();
                constraintsByNutSheetTableModel.getNutrientConstraintList().clear();
                jTextAreaNutritionalSheetName.setText("");
            } catch(SQLException ex) {
                //TODO: handle refresh table data
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonNewNutritionalSheetActionPerformed

    private void jButtonEditNutritionalSheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditNutritionalSheetActionPerformed
        JDialog formDialog = new JDialog(this, "Modificar Hoja Nutricional", true);
        int rowIndex = jTableNutritionalSheets.getSelectedRow();
        NutrientConstraintSheet toModify = (NutrientConstraintSheet)nutritionalSheetTableModel.getObjectAtRow(rowIndex);
        JPanelNutrientConstraintSheetForm nutritionalSheetForm = new JPanelNutrientConstraintSheetForm(formDialog, toModify.getId());
        formDialog.setContentPane(nutritionalSheetForm);
        formDialog.setSize(500, 500);
        formDialog.setResizable(false);
        formDialog.setVisible(true);
        if (nutritionalSheetForm.getSuccess()) {
            System.out.println("Successfully saved");
            try {
                nutritionalSheetTableModel.setNutritionalSheetList(nutritionalSheetDao.queryForAll());
                nutritionalSheetTableModel.fireTableDataChanged();
                constraintsByNutSheetTableModel.getNutrientConstraintList().clear();
                jTextAreaNutritionalSheetName.setText("");
            } catch(SQLException ex) {
                //TODO: handle refresh table data
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonEditNutritionalSheetActionPerformed

    private void jButtonDeleteNutritionalSheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteNutritionalSheetActionPerformed
        deleteNutritionalSheet();
    }//GEN-LAST:event_jButtonDeleteNutritionalSheetActionPerformed
    
    private void loadConstraintsByNutritionalSheet(NutrientConstraintSheet nutritionalSheet) {
        try {
            nutritionalSheetDao.populateNutrientConstraintSheet(nutritionalSheet);
            constraintsByNutSheetTableModel.setNutrientConstraintList(nutritionalSheet.getNutrientConstraintList());
            constraintsByNutSheetTableModel.fireTableDataChanged();
            jTextAreaNutritionalSheetName.setText(nutritionalSheet.getName());
        } catch(SQLException ex) {
            //TODO: handle load constraints
            ex.printStackTrace();
        }
    }
    
    private void loadNutrientsByIngredient(Long ingredientId) {
        try {
            Ingredient ingredient = new Ingredient();
            ingredient.setId(ingredientId);
            ingredient = ingredientDao.populateNutrients(ingredient);
            nutrientsByIngredientTableModel.setNutrientList(ingredient.getNutrients());
            nutrientsByIngredientTableModel.fireTableDataChanged();
            jLabelIngredientName.setText(ingredientTableModel.getValueAt(jTableIngredients.getSelectedRow(), 1).toString());
            jLabelIngredientName.setVisible(true);
        } catch(SQLException ex) {
            //TODO: handle load nutrients
            ex.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameMain().setVisible(true);
                } catch(SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteIngredient;
    private javax.swing.JButton jButtonDeleteNutrient;
    private javax.swing.JButton jButtonDeleteNutritionalSheet;
    private javax.swing.JButton jButtonEditIngredient;
    private javax.swing.JButton jButtonEditNutrient;
    private javax.swing.JButton jButtonEditNutritionalSheet;
    private javax.swing.JButton jButtonExportNutrientList;
    private javax.swing.JButton jButtonNewIngredient;
    private javax.swing.JButton jButtonNewNutrient;
    private javax.swing.JButton jButtonNewNutritionalSheet;
    private javax.swing.JLabel jLabelIngredientName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelHome;
    private javax.swing.JPanel jPanelIngredientDetail;
    private javax.swing.JPanel jPanelIngredients;
    private javax.swing.JPanel jPanelNutrients;
    private javax.swing.JPanel jPanelNutritionalSheet;
    private javax.swing.JPanel jPanelNutritionalSheetDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JTable jTableIngredientDetails;
    private javax.swing.JTable jTableIngredients;
    private javax.swing.JTable jTableNutrients;
    private javax.swing.JTable jTableNutritionalConstraints;
    private javax.swing.JTable jTableNutritionalSheets;
    private javax.swing.JTextArea jTextAreaNutritionalSheetName;
    // End of variables declaration//GEN-END:variables
}
